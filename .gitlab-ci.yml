

stages:
  - setup
  - build
  - test
  - publish


default:
  tags:
    - openbis


services:
  - name: openbis/debian-openbis:20.10.7
    alias: openbis
    variables:
      SERVER_HOST_PORT: openbis:443
      GROUP_ID: 1000
      #CORE_PLUGINS: enabled-modules =
    pull_policy: if-not-present


image: gradle:alpine

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME
  - OPENBIS="https://openbis:443"
  - export OPENBIS


check_openbis:
  stage: setup
  image: alpine/curl
  script:
    - curl -k ${OPENBIS}
  retry: 2

build:
  stage: build
  script: gradle --build-cache jar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

publish:
  stage: publish
  script: gradle --build-cache publish
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: gradle run --args "${OPENBIS} admin changeit"
  services:
    - name: openbis/debian-openbis:20.10.5-EA
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production

